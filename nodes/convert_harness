#!/usr/bin/env python

"""
    Author: Mingi Jeong

    node convert_harness
    
    purpose: 
    - automated convert nodes
"""

# python modules
import os

# ROS modules
import rospy
import rospkg

# custom modules
from multibags_to_csv.ConvertHarness import ConvertHarness


def main():
    # node initialization
    rospy.init_node('multibag_to_csv')
    rospy.sleep(1)

    # ----------------------------------------------------------
    # load files
    # ----------------------------------------------------------

    # launch file
    rospack = rospkg.RosPack()
    launch_file = [rospack.get_path('multibags_to_csv') + "/launch/csv_converter.launch"]

    # bag files
    path = '/home/minkbrook/Desktop/testbag/' # main directory where bags located
    bag_files = []

    # walker file finder 
    # https://mkyong.com/python/python-how-to-list-all-files-in-a-directory/
    # r=root, d=directories, f = files
    for r, d, f in os.walk(path):
        for file in f:
            if '.bag' in file:
                bag_files.append(os.path.join(r, file))

    print(launch_file)
    

    # hard code test
    # launch_file = ['/home/minkbrook/catkin_ws/src/multibags_to_csv/launch/csv_converter.launch']
    # bag_files = ["/home/minkbrook/Desktop/scenario_10_1_MOA_t4_f3.0_g4.0_h1.0_T15_D15_A10_2022-01-26-09-08-48.bag", 
    #     '/home/minkbrook/Desktop/scenario_30_1_APF_t1_2022-01-25-02-28-06.bag']
    # bag_files = ['/home/minkbrook/Desktop/scenario_30_1_APF_t4_2022-01-25-13-25-34.bag']


    # ----------------------------------------------------------
    # argument building
    # ----------------------------------------------------------
    roslaunch_args = []
    for bag_file in bag_files:
        roslaunch_args.append(["bag_file:={}".format(bag_file)])

    rospy.logwarn("cli arguments {}". format(roslaunch_args))


    # ----------------------------------------------------------
    # auto run
    # ----------------------------------------------------------
    convert_harness = ConvertHarness() # initialization   
    
    for roslaunch_arg in roslaunch_args:
        convert_harness.run_convert(launch_file, roslaunch_arg)



if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        rospy.logerr("executing convert harness node failed")
        pass